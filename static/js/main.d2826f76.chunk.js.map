{"version":3,"sources":["Components/Form/Form.jsx","Components/ListTitle/ListTitle.jsx","Components/ListItem/ListItem.jsx","Components/ListItems/ListItems.jsx","Components/List/List.jsx","Components/Container/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","onAddItem","className","onSubmit","e","id","name","type","value","ListTitle","ListItem","item","onDeleteItem","timestamp","distance","onClick","ListItems","items","map","nanoid","List","ITEMS","Container","date","moment","locale","format","useState","sort","a","b","state","setState","preventDefault","newDate","target","querySelector","find","prev","newState","forEach","toString","push","deletedItem","closest","filter","textContent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2826f76.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Form(props) {\r\n  const { onAddItem } = props;\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={(e) => onAddItem(e)}>\r\n      <div className=\"form__date\">\r\n        <div>Дата (ДД.ММ.ГГ)</div>\r\n        <input id=\"date\" name=\"date\" type=\"text\" />\r\n      </div>\r\n      <div className=\"form__distance\">\r\n        <div>Пройдено км</div>\r\n        <input id=\"distance\" name=\"distance\" type=\"text\" />\r\n      </div>\r\n      <input id=\"submit\" type=\"submit\" value=\"OK\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddItem: PropTypes.func\r\n}","export default function ListTitle() {\r\n  return (\r\n    <div>\r\n      <div className=\"table__title\">\r\n        <span>Дата (ДД.ММ.ГГ)</span>\r\n        <span>Пройдено км</span>\r\n        <span>Действия</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ListItem(props) {\r\n  const { item, onDeleteItem } = props;\r\n  return (\r\n    <div className=\"table__item\">\r\n      <div className=\"table__timestamp\">{item.timestamp}</div>\r\n      <div className=\"table__distance\">{item.distance}</div>\r\n      <div className=\"table__delete\" onClick={onDeleteItem}>✘</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    timestamp: PropTypes.string,\r\n    distance: PropTypes.string,\r\n  }),\r\n  onDeleteItem: PropTypes.func\r\n}","import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport PropTypes from 'prop-types'\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nexport default function ListItems(props) {\r\n  const { items, onDeleteItem } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"table__items\">\r\n        {items.map((item) => <ListItem key={nanoid()} item={item} onDeleteItem={onDeleteItem} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nListItems.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    timestamp: PropTypes.string,\r\n    distance: PropTypes.string\r\n  })),\r\n  onDeleteItem: PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport ListTitle from '../ListTitle/ListTitle';\r\nimport ListItems from '../ListItems/ListItems';\r\n\r\nexport default function List(props) {\r\n  const { items, onDeleteItem } = props;\r\n  return (\r\n    <div className=\"table\">\r\n      <ListTitle />\r\n      <ListItems items={items} onDeleteItem={onDeleteItem} />\r\n    </div>\r\n  )\r\n}\r\n\r\nList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    timestamp: PropTypes.string,\r\n    distance: PropTypes.string\r\n  })),\r\n  onDeleteItem: PropTypes.func\r\n}","import moment from 'moment/min/moment-with-locales';\r\nimport React, { useState } from 'react'\r\nimport Form from '../Form/Form'\r\nimport List from '../List/List'\r\n\r\nlet ITEMS = [\r\n  {\r\n    timestamp: '20.07.2019',\r\n    distance: '5'\r\n  },\r\n  {\r\n    timestamp: '19.07.2019',\r\n    distance: '10'\r\n  },\r\n  {\r\n    timestamp: '18.07.2019',\r\n    distance: '8.8'\r\n  },\r\n]\r\n\r\nexport default function Container() {\r\n  const date = (date) => {\r\n    moment.locale('ru');\r\n    return moment(date, 'DD.MM.YYYY').format('L');\r\n  };\r\n\r\n  const [state, setState] = useState(ITEMS.sort((a, b) => date(a.timestamp) < date(b.timestamp) ? 1 : -1));\r\n\r\n  const onAddItem = (e) => {\r\n    e.preventDefault();\r\n    const newDate = date(e.target.querySelector('#date').value);\r\n    if (state.find(item => item.timestamp === newDate)) {\r\n      setState(prev => {\r\n        const newState = []\r\n        prev.forEach(item => {\r\n          if (item.timestamp === newDate) {\r\n            item.distance = (+item.distance + +e.target.querySelector('#distance').value).toString();\r\n            item = {\r\n              timestamp: newDate,\r\n              distance: item.distance,\r\n            }\r\n          }\r\n          newState.push(item);\r\n        })\r\n        e.target.querySelector('#date').value = ''\r\n        e.target.querySelector('#distance').value = ''\r\n        return newState.sort((a, b) => date(a.timestamp) < date(b.timestamp) ? 1 : -1)\r\n      })\r\n    } else {\r\n      setState(prev => {\r\n        return [\r\n          ...prev,\r\n          {\r\n            timestamp: newDate,\r\n            distance: e.target.querySelector('#distance').value,\r\n          }\r\n         ].sort((a, b) => date(a.timestamp) < date(b.timestamp) ? 1 : -1)\r\n      })\r\n    }\r\n  }\r\n\r\n  const onDeleteItem = (e) => {\r\n    const deletedItem = e.target.closest('.table__item').querySelector('.table__timestamp');\r\n    const newState = state.filter((item) => item.timestamp !== deletedItem.textContent)\r\n    setState(() => {\r\n      return newState.sort((a, b) => date(a.timestamp) < date(b.timestamp) ? 1 : -1)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form onAddItem={onAddItem} />\r\n      <List items={state} onDeleteItem={onDeleteItem} />\r\n    </div>\r\n  )\r\n}\r\n","import './App.scss';\nimport Container from './Components/Container/Container';\n\nexport default function App() {\n  return (\n    <Container />\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}