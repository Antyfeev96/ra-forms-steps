{"version":3,"sources":["Components/Form/Form.jsx","Components/ListTitle/ListTitle.jsx","Components/ListItem/ListItem.jsx","Components/ListItems/ListItems.jsx","Components/List/List.jsx","Components/Container/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","props","onAddItem","handleTimestamp","handleDistance","formRef","useRef","ref","className","onSubmit","e","placeholder","id","name","type","onChange","onClick","current","reset","value","ListTitle","ListItem","item","onDeleteItem","timestamp","distance","key","ListItems","items","setState","map","index","arr","splice","List","toDate","input","parts","split","date","Date","parseInt","day","getDate","toString","length","month","getMonth","string","getFullYear","ITEMS","nanoid","Container","useState","sort","a","b","state","form","setForm","preventDefault","find","prev","newState","forEach","newDistance","push","event","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.411b72f5.chunk.js","sourcesContent":["import { useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Form(props) {\r\n  const { onAddItem, handleTimestamp, handleDistance } = props;\r\n\r\n  const formRef = useRef();\r\n\r\n  const onClick = () => {\r\n    formRef.current.reset();\r\n  }\r\n\r\n  return (\r\n    <form ref={formRef} className=\"form\" onSubmit={(e) => onAddItem(e)}>\r\n      <div className=\"form__date\">\r\n        <div>Дата (ДД.ММ.ГГ)</div>\r\n        <input placeholder='Введите дату' id=\"date\" name=\"date\" type=\"text\" onChange={(e) => handleTimestamp(e)}/>\r\n      </div>\r\n      <div className=\"form__distance\">\r\n        <div>Пройдено км</div>\r\n        <input placeholder='Введите дистанцию' id=\"distance\" name=\"distance\" type=\"text\" onChange={(e) => handleDistance(e)}/>\r\n      </div>\r\n      <input onClick={(e) => onClick(e)} id=\"submit\" type=\"submit\" value=\"OK\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddItem: PropTypes.func,\r\n  handleTimestamp: PropTypes.func,\r\n  handleDistance: PropTypes.func,\r\n}","export default function ListTitle() {\r\n  return (\r\n    <div>\r\n      <div className=\"table__title\">\r\n        <span>Дата (ДД.ММ.ГГ)</span>\r\n        <span>Пройдено км</span>\r\n        <span>Действия</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function ListItem(props) {\r\n  const { item, onDeleteItem } = props;\r\n\r\n  return (\r\n    <div key={item.key} className=\"table__item\">\r\n      <div className=\"table__timestamp\">{item.timestamp}</div>\r\n      <div className=\"table__distance\">{item.distance}</div>\r\n      <div  className=\"table__delete\" onClick={onDeleteItem}>✘</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    timestamp: PropTypes.string,\r\n    distance: PropTypes.string,\r\n  }),\r\n  onDeleteItem: PropTypes.func\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ListItem from '../ListItem/ListItem';\r\n\r\nexport default function ListItems(props) {\r\n  const  { items, setState } = props;\r\n\r\n  const onDeleteItem = (index) => {\r\n    const arr = [ ...items ];\r\n    arr.splice(index, 1);\r\n    setState(() => arr);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table__items\">\r\n        {items.map((item, index) => <ListItem key={item.key} item={item} onDeleteItem={() => onDeleteItem(index)} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nListItems.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    timestamp: PropTypes.string,\r\n    distance: PropTypes.string\r\n  })),\r\n  setState: PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport ListTitle from '../ListTitle/ListTitle';\r\nimport ListItems from '../ListItems/ListItems';\r\n\r\nexport default function List(props) {\r\n  const { items, setState } = props;\r\n  return (\r\n    <div className=\"table\">\r\n      <ListTitle />\r\n      <ListItems items={items} setState={setState} />\r\n    </div>\r\n  )\r\n}\r\n\r\nList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    timestamp: PropTypes.string,\r\n    distance: PropTypes.string\r\n  })),\r\n  setState: PropTypes.func\r\n}","import { nanoid } from 'nanoid';\r\nimport React, { useState } from 'react'\r\nimport Form from '../Form/Form'\r\nimport List from '../List/List'\r\n\r\nconst toDate = (input) => {\r\n  const parts = input.split('.')\r\n  const date = new Date(\r\n    parseInt(parts[2], 10), \r\n    parseInt(parts[1], 10) - 1, \r\n    parseInt(parts[0], 10)\r\n  );\r\n  const day = date.getDate().toString().length === 1 ? `0${date.getDate()}` : date.getDate();\r\n  const month = date.getMonth().toString().length === 1 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n  return {\r\n    date,\r\n    string: `${day}.${(month).toString()}.${date.getFullYear()}`\r\n  }\r\n};\r\n\r\nlet ITEMS = [\r\n  {\r\n    key: nanoid(5),\r\n    timestamp: '20.07.2019',\r\n    distance: '5'\r\n  },\r\n  {\r\n    key: nanoid(5),\r\n    timestamp: '08.12.1996',\r\n    distance: '10'\r\n  },\r\n  {\r\n    key: nanoid(5),\r\n    timestamp: '18.07.2019',\r\n    distance: '8.8'\r\n  },\r\n];\r\n\r\nexport default function Container() {\r\n\r\n  const [state, setState] = useState(ITEMS.sort((a, b) => toDate(a.timestamp).date < toDate(b.timestamp).date ? 1 : -1));\r\n  const [form, setForm] = useState({\r\n    timestamp: '',\r\n    distance: ''\r\n  })\r\n\r\n  const handleTimestamp = (event) => {\r\n    const { value } = event.target;\r\n    setForm( prev => ({ ...prev, timestamp: value }));\r\n  }\r\n\r\n  const handleDistance = (event) => {\r\n    const { value } = event.target;\r\n    setForm( prev => ({ ...prev, distance: value }));\r\n  }\r\n\r\n  const onAddItem = (e) => {\r\n    e.preventDefault();\r\n    const date = toDate(form.timestamp).string;\r\n    const { distance } = form;\r\n    if (state.find(item => item.timestamp === date)) {\r\n      setState(prev => {\r\n        const newState = [];\r\n        prev.forEach(item => {\r\n          if (item.timestamp === date) {\r\n            const newDistance = (+item.distance + +distance).toString();\r\n            item = {\r\n              key: nanoid(5),\r\n              timestamp: date,\r\n              distance: newDistance,\r\n            }\r\n          }\r\n          newState.push(item);\r\n        })\r\n        return newState.sort((a, b) => toDate(a.timestamp).date < toDate(b.timestamp).date ? 1 : -1);\r\n      })\r\n    } else {\r\n      setState(prev => {\r\n        return [\r\n          ...prev,\r\n          {\r\n            key: nanoid(5),\r\n            timestamp: date,\r\n            distance,\r\n          }\r\n         ].sort((a, b) => toDate(a.timestamp).date < toDate(b.timestamp).date ? 1 : -1)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form setForm={setForm} onAddItem={onAddItem} handleTimestamp={handleTimestamp} handleDistance={handleDistance} />\r\n      <List items={state} setState={setState} />\r\n    </div>\r\n  )\r\n}\r\n","import './App.scss';\nimport Container from './Components/Container/Container';\n\nexport default function App() {\n  return (\n    <Container />\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}